<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IiIiKQiIiKURERF//9k=
</value>
  </data>
</root>